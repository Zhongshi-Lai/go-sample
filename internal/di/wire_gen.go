// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"go-sample/internal/server"
	"go-sample/internal/service"
	"go-sample/internal/service/sample"
	"go-sample/pkg"
	"google.golang.org/grpc"
)

// Injectors from wire.go:

func InitializeGRPCApp() (*GRPCApp, func(), error) {
	tools := pkg.NewAllTools()
	sampleService := sample.NewService(tools)
	allService := service.NewAllService(sampleService)
	grpcServer := server.NewGRPCServer(allService)
	grpcApp, err := newGRPCApp(grpcServer)
	if err != nil {
		return nil, nil, err
	}
	return grpcApp, func() {
	}, nil
}

// wire.go:

type GRPCApp struct {
	GRPCServer *grpc.Server
}

func newGRPCApp(grpcServer *grpc.Server) (*GRPCApp, error) {
	return &GRPCApp{
		GRPCServer: grpcServer,
	}, nil
}
